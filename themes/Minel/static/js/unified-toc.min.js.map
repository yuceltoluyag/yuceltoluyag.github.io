{"version":3,"sources":["unified-toc.js"],"names":["_createForOfIteratorHelper","r","e","t","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","o","a","u","call","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","document","addEventListener","scrollTimeout","tocContainer","querySelector","querySelectorAll","forEach","heading","index","id","textContent","toLowerCase","replace","concat","classList","add","tocContent","marker","createElement","className","appendChild","setupTocMarker","tocLinks","link","remove","insertAdjacentHTML","handleTocLinkClick","map","getAttribute","header","getElementById","filter","item","setupHeaderMappings","setupTocLinks","window","cancelAnimationFrame","requestAnimationFrame","updateToc","passive","preventDefault","targetId","this","targetHeader","stopPropagation","scrollTo","top","offsetTop","behavior","history","pushState","location","hash","scrollPosition","scrollY","headings","currentHeader","previousHeader","i","nextHeading","headingTop","nextHeadingTop","body","scrollHeight","_step","_iterator","err","allTocLinks","activeLink","allLinks","activeIndex","indexOf","circle","setAttribute","_allLinks","nextHeader","progress","Math","min","round","markReadLinks","linkTop","style","transform","liElement","parentElement","tocRect","getBoundingClientRect","liRect","scrollingUp","bottom","offset","clientHeight","scrollTocToActiveLink","updateTocItems"],"mappings":"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","file":"unified-toc.min.js","sourcesContent":["/**\r\n * İçindekiler Tablosu (TOC) - Birleştirilmiş Sürüm\r\n * toc.js ve toc-enhancements.js'nin en iyi özelliklerini birleştirir\r\n */\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    // TOC container'ı bul\r\n    const tocContainer = document.querySelector(\".toc-container\");\r\n    if (!tocContainer) return;\r\n\r\n    // Başlama işlevleri\r\n    setupHeadings();\r\n    setupTocMarker();\r\n    setupTocLinks();\r\n\r\n    // Scroll olayını dinle (performans için requestAnimationFrame kullanarak)\r\n    let scrollTimeout;\r\n    window.addEventListener(\r\n        \"scroll\",\r\n        () => {\r\n            if (scrollTimeout) {\r\n                window.cancelAnimationFrame(scrollTimeout);\r\n            }\r\n            scrollTimeout = requestAnimationFrame(() => {\r\n                updateToc();\r\n            });\r\n        },\r\n        { passive: true }\r\n    );\r\n\r\n    // İlk yüklemede TOC'u güncelle\r\n    updateToc();\r\n\r\n    /**\r\n     * Başlıkları ayarla (ID'leri yoksa otomatik oluştur)\r\n     */\r\n    function setupHeadings() {\r\n        const headings = document.querySelectorAll(\".article-content h2, .article-content h3, .article-content h4\");\r\n\r\n        headings.forEach((heading, index) => {\r\n            if (!heading.id) {\r\n                // ID yoksa, başlık metninden ID oluştur\r\n                const id = heading.textContent\r\n                    .toLowerCase()\r\n                    .replace(/[^\\w\\s-]/g, \"\")\r\n                    .replace(/\\s+/g, \"-\");\r\n\r\n                heading.id = `heading-${id}-${index}`;\r\n            }\r\n\r\n            // Görünür hale gelmesi için başlıklara sınıf ekle\r\n            heading.classList.add(\"scroll-target\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * TOC marker'ı oluştur (aktif başlığın yanındaki çizgi)\r\n     */\r\n    function setupTocMarker() {\r\n        const tocContent = document.querySelector(\".toc-content\");\r\n        if (!tocContent) return;\r\n\r\n        const marker = document.createElement(\"div\");\r\n        marker.className = \"toc-marker\";\r\n        tocContent.appendChild(marker);\r\n    }\r\n\r\n    /**\r\n     * TOC linklerine SVG ikon ekle ve sınıfları düzenle\r\n     */\r\n    function setupTocLinks() {\r\n        // Tüm TOC linklerini bul\r\n        const tocLinks = tocContainer.querySelectorAll(\".toc-list-item a\");\r\n        if (tocLinks.length === 0) return;\r\n\r\n        tocLinks.forEach((link) => {\r\n            // Link sınıflarını düzenle\r\n            link.classList.remove(\"toc-link\");\r\n            link.classList.add(\"toc-href\");\r\n\r\n            // SVG ikonu ekle\r\n            link.insertAdjacentHTML(\"afterbegin\", createSvgTemplate());\r\n\r\n            // Link tıklama olayı\r\n            link.addEventListener(\"click\", handleTocLinkClick);\r\n        });\r\n\r\n        // Başlık eşleştirmelerini hazırla\r\n        return setupHeaderMappings();\r\n    }\r\n\r\n    /**\r\n     * SVG şablonu oluştur - daha minimal tasarım\r\n     */\r\n    function createSvgTemplate() {\r\n        return `\r\n        <svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <line x1=\"0\" y1=\"12\" x2=\"8\" y2=\"12\" class=\"toc-line\"></line>\r\n            <circle cx=\"14\" cy=\"12\" r=\"4\" class=\"toc-dot\"></circle>\r\n        </svg>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Başlık eşleştirmelerini hazırla\r\n     */\r\n    function setupHeaderMappings() {\r\n        const tocLinks = tocContainer.querySelectorAll(\"a.toc-href\");\r\n\r\n        // Başlıkları ve bağlantılarını eşleştir\r\n        return Array.from(tocLinks)\r\n            .map((link) => {\r\n                const id = link.getAttribute(\"href\").slice(1);\r\n                const header = document.getElementById(id);\r\n                return { id, header, link };\r\n            })\r\n            .filter((item) => item.header); // Sadece mevcut başlıkları al\r\n    }\r\n\r\n    /**\r\n     * TOC link tıklama olayını işle\r\n     */\r\n    function handleTocLinkClick(e) {\r\n        e.preventDefault();\r\n        const targetId = this.getAttribute(\"href\").slice(1);\r\n        const targetHeader = document.getElementById(targetId);\r\n\r\n        if (targetHeader) {\r\n            // Sayfa geçiş animasyonunu engelle\r\n            e.stopPropagation();\r\n\r\n            // Smooth scroll\r\n            window.scrollTo({\r\n                top: targetHeader.offsetTop - 100, // Üstten ofset\r\n                behavior: \"smooth\",\r\n            });\r\n\r\n            // URL'i güncelle ama sayfayı yenileme\r\n            if (history.pushState) {\r\n                history.pushState(null, null, `#${targetId}`);\r\n            } else {\r\n                location.hash = `#${targetId}`;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * TOC'u güncelle - hem toc.js hem de toc-enhancements.js'den en iyi özellikleri kullanır\r\n     */\r\n    function updateToc() {\r\n        const scrollPosition = window.scrollY + 150;\r\n        const headings = Array.from(\r\n            document.querySelectorAll(\".article-content h2, .article-content h3, .article-content h4\")\r\n        );\r\n        if (headings.length === 0) return;\r\n\r\n        // Aktif başlığı bul\r\n        let currentHeader = null;\r\n        let previousHeader = null;\r\n\r\n        // Hangi başlığın görünür olduğunu belirle\r\n        for (let i = 0; i < headings.length; i++) {\r\n            const heading = headings[i];\r\n            const nextHeading = headings[i + 1];\r\n            const headingTop = heading.offsetTop;\r\n            const nextHeadingTop = nextHeading ? nextHeading.offsetTop : document.body.scrollHeight;\r\n\r\n            if (scrollPosition >= headingTop && scrollPosition < nextHeadingTop) {\r\n                previousHeader = currentHeader;\r\n                currentHeader = heading;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Eğer görünür başlık bulunamadıysa, son görünür başlığı bul\r\n        if (!currentHeader && headings.length > 0) {\r\n            for (const heading of headings) {\r\n                if (heading.offsetTop > scrollPosition) {\r\n                    currentHeader = heading;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Hala bulunamadıysa, son başlığı seç\r\n            if (!currentHeader) {\r\n                currentHeader = headings[headings.length - 1];\r\n            }\r\n        }\r\n\r\n        // Eğer bir başlık bulunduysa, TOC öğelerini güncelle\r\n        updateTocItems(currentHeader, previousHeader, scrollPosition);\r\n    }\r\n\r\n    /**\r\n     * TOC öğelerini aktif başlığa göre güncelle\r\n     */\r\n    function updateTocItems(currentHeader, previousHeader, scrollPosition) {\r\n        if (!currentHeader) return;\r\n\r\n        const allTocLinks = document.querySelectorAll(\".toc-href\");\r\n        const marker = document.querySelector(\".toc-marker\");\r\n\r\n        // Önce tüm aktif sınıfları kaldır\r\n        allTocLinks.forEach((link) => {\r\n            link.classList.remove(\"toc-reading\");\r\n        });\r\n\r\n        // ID'ye göre aktif linki bul\r\n        const activeLink = document.querySelector(`.toc-href[href=\"#${currentHeader.id}\"]`);\r\n        if (!activeLink) return;\r\n\r\n        // Aktif linke sınıf ekle\r\n        activeLink.classList.add(\"toc-reading\");\r\n\r\n        // Okunan başlıkları işaretle ve ilerleme çubuğunu güncelle\r\n        markReadLinks(activeLink, allTocLinks, scrollPosition);\r\n\r\n        // Marker pozisyonunu güncelle\r\n        if (marker) {\r\n            const linkTop = activeLink.offsetTop;\r\n            marker.style.transform = `translateY(${linkTop}px)`;\r\n        }\r\n\r\n        // TOC'u aktif öğeye scroll et\r\n        scrollTocToActiveLink(activeLink, previousHeader);\r\n    }\r\n\r\n    /**\r\n     * Okunan linkleri işaretle ve ilerleme çubuğunu güncelle\r\n     */\r\n    function markReadLinks(activeLink, allTocLinks, scrollPosition) {\r\n        const allLinks = Array.from(allTocLinks);\r\n        const activeIndex = allLinks.indexOf(activeLink);\r\n\r\n        // Tüm linkleri kontrol et\r\n        allLinks.forEach((link, index) => {\r\n            const targetId = link.getAttribute(\"href\").slice(1);\r\n            const header = document.getElementById(targetId);\r\n\r\n            if (!header) return;\r\n\r\n            // Aktif linkten önceki tüm linkleri \"okundu\" olarak işaretle\r\n            if (index < activeIndex) {\r\n                link.classList.add(\"toc-already-read\");\r\n\r\n                // İlerleme durumunu göster\r\n                const circle = link.querySelector(\"circle\");\r\n                if (circle) {\r\n                    circle.setAttribute(\"stroke-dashoffset\", \"0\"); // Tamamen tamamlandı\r\n                }\r\n            }\r\n            // Aktif linki işaretle, kısmi ilerleme göster\r\n            else if (index === activeIndex) {\r\n                link.classList.add(\"toc-already-read\");\r\n\r\n                // Kısmi ilerleme hesapla\r\n                const nextHeader = document.getElementById(allLinks[index + 1]?.getAttribute(\"href\").slice(1));\r\n                if (nextHeader) {\r\n                    const progress = Math.min(\r\n                        100,\r\n                        ((scrollPosition - header.offsetTop) / (nextHeader.offsetTop - header.offsetTop)) * 100\r\n                    );\r\n\r\n                    const circle = link.querySelector(\"circle\");\r\n                    if (circle) {\r\n                        circle.setAttribute(\"stroke-dashoffset\", Math.round(100 - progress));\r\n                    }\r\n                }\r\n            }\r\n            // Diğer linkleri temizle\r\n            else {\r\n                link.classList.remove(\"toc-already-read\");\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * TOC'u aktif öğeye scroll et\r\n     */\r\n    function scrollTocToActiveLink(activeLink, previousHeader) {\r\n        const liElement = activeLink.parentElement;\r\n        const tocRect = tocContainer.getBoundingClientRect();\r\n        const liRect = liElement.getBoundingClientRect();\r\n\r\n        // Scroll yönünü belirle\r\n        const scrollingUp = previousHeader && previousHeader.offsetTop > liElement.offsetTop;\r\n\r\n        // Link görünür değilse scroll\r\n        if (liRect.top < tocRect.top || liRect.bottom > tocRect.bottom) {\r\n            const offset = scrollingUp\r\n                ? tocContainer.clientHeight * 0.7 // Yukarı scroll için offset\r\n                : tocContainer.clientHeight * 0.3; // Aşağı scroll için offset\r\n\r\n            tocContainer.scrollTo({\r\n                top: liElement.offsetTop - offset,\r\n                behavior: \"smooth\",\r\n            });\r\n        }\r\n    }\r\n});\r\n"]}