{"version":3,"sources":["main.js"],"names":["document","addEventListener","menuToggle","querySelector","siteNavigation","body","menuOverlay","createElement","className","appendChild","isExpanded","this","getAttribute","setAttribute","classList","toggle","contains","remove","querySelectorAll","forEach","item","link","window","innerWidth","e","preventDefault","key","matchMedia","header","scrollY","add","location","hostname","hasAttribute","anchor","targetId","substring","targetElement","getElementById","scrollTo","top","offsetTop","behavior","history","pushState","searchLink","searchModal","searchClose","searchInput","setTimeout","focus","target","pre","codeElement","copyButton","code","textContent","navigator","clipboard","writeText","then","textArea","value","style","position","select","execCommand","err","removeChild","IntersectionObserver","entries","entry","isIntersecting","opacity","observe","language","classMatch","match","langLabel","toUpperCase","insertBefore","firstChild","charCount","length","lineHeight","parseInt","getComputedStyle","maxHeight","overflow","buttonContainer","showMoreButton","parentNode","nextSibling","scrollHeight","initializeTOC","toc","tocLinks","headers","Array","from","filter","id","observer","activeLink","find","concat","rootMargin","threshold","initializeSearch","searchForm","searchInputField","searchResults","searchResultsList","initialQuery","URLSearchParams","search","get","performSearch","query","trim","fetch","response","json","data","results","title","toLowerCase","includes","content","innerHTML","noResults","result","href","url","snippet","error","newUrl","URL","searchParams","set"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * Main JavaScript file for the Minel theme\r\n */\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    // Responsive menu\r\n    const menuToggle = document.querySelector(\".menu-toggle\");\r\n    const siteNavigation = document.querySelector(\".site-navigation\");\r\n    const body = document.body;\r\n\r\n    // Mobil menü için overlay oluştur\r\n    const menuOverlay = document.createElement(\"div\");\r\n    menuOverlay.className = \"menu-overlay\";\r\n    document.body.appendChild(menuOverlay);\r\n\r\n    if (menuToggle) {\r\n        menuToggle.addEventListener(\"click\", function () {\r\n            const isExpanded = this.getAttribute(\"aria-expanded\") === \"true\";\r\n            this.setAttribute(\"aria-expanded\", !isExpanded);\r\n            siteNavigation.classList.toggle(\"toggled\");\r\n            body.classList.toggle(\"menu-open\");\r\n        });\r\n\r\n        // Overlay'e tıklama ile menüyü kapat\r\n        menuOverlay.addEventListener(\"click\", function () {\r\n            if (siteNavigation.classList.contains(\"toggled\")) {\r\n                menuToggle.setAttribute(\"aria-expanded\", \"false\");\r\n                siteNavigation.classList.remove(\"toggled\");\r\n                body.classList.remove(\"menu-open\");\r\n            }\r\n        });\r\n\r\n        // Alt menüler için işlemler\r\n        const subMenuParents = document.querySelectorAll(\".menu-item-has-children\");\r\n\r\n        subMenuParents.forEach((item) => {\r\n            // Mobil görünümde alt menüleri açıp kapamak için tıklama işlevi\r\n            const link = item.querySelector(\".menu-link\");\r\n\r\n            if (link && window.innerWidth <= 768) {\r\n                link.addEventListener(\"click\", function (e) {\r\n                    if (window.innerWidth <= 768) {\r\n                        // Sadece mobilde çalışsın\r\n                        e.preventDefault();\r\n                        item.classList.toggle(\"submenu-open\");\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // Pencere boyutu değiştiğinde menü durumunu sıfırla\r\n        window.addEventListener(\"resize\", function () {\r\n            if (window.innerWidth > 768) {\r\n                body.classList.remove(\"menu-open\");\r\n                if (siteNavigation.classList.contains(\"toggled\")) {\r\n                    siteNavigation.classList.remove(\"toggled\");\r\n                    menuToggle.setAttribute(\"aria-expanded\", \"false\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // ESC tuşu ile mobil menüyü kapat\r\n        document.addEventListener(\"keydown\", function (e) {\r\n            if (e.key === \"Escape\" && siteNavigation.classList.contains(\"toggled\")) {\r\n                menuToggle.setAttribute(\"aria-expanded\", \"false\");\r\n                siteNavigation.classList.remove(\"toggled\");\r\n                body.classList.remove(\"menu-open\");\r\n            }\r\n        });\r\n    }\r\n\r\n    // Otomatik karanlık mod\r\n    const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n    // Scroll olduğunda header'ı değiştir\r\n    const header = document.querySelector(\".site-header\");\r\n\r\n    if (header) {\r\n        window.addEventListener(\"scroll\", function () {\r\n            if (window.scrollY > 50) {\r\n                header.classList.add(\"scrolled\");\r\n            } else {\r\n                header.classList.remove(\"scrolled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    // Dış bağlantılar için yeni sekme\r\n    const externalLinks = document.querySelectorAll('a[href^=\"http\"]:not([href*=\"' + window.location.hostname + '\"])');\r\n    externalLinks.forEach((link) => {\r\n        if (!link.hasAttribute(\"target\")) {\r\n            link.setAttribute(\"target\", \"_blank\");\r\n            link.setAttribute(\"rel\", \"noopener noreferrer\");\r\n        }\r\n    });\r\n\r\n    // Sayfa içi bağlantılar için düzgün kaydırma\r\n    document.querySelectorAll('a[href^=\"#\"]:not([href=\"#\"])').forEach((anchor) => {\r\n        anchor.addEventListener(\"click\", function (e) {\r\n            const targetId = this.getAttribute(\"href\").substring(1);\r\n            const targetElement = document.getElementById(targetId);\r\n\r\n            if (targetElement) {\r\n                e.preventDefault();\r\n\r\n                window.scrollTo({\r\n                    top: targetElement.offsetTop - 80, // Header yüksekliği için ofset\r\n                    behavior: \"smooth\",\r\n                });\r\n\r\n                // URL'yi güncelle ama sayfayı yeniden yükleme\r\n                window.history.pushState(null, null, \"#\" + targetId);\r\n            }\r\n        });\r\n    });\r\n\r\n    // Arama modalı\r\n    const searchLink = document.querySelector(\".search-link\");\r\n    const searchModal = document.querySelector(\".search-modal\");\r\n    const searchClose = document.querySelector(\".search-modal-close\");\r\n    const searchInput = document.querySelector(\".search-input\");\r\n\r\n    if (searchLink && searchModal) {\r\n        searchLink.addEventListener(\"click\", function (e) {\r\n            e.preventDefault();\r\n            searchModal.classList.add(\"active\");\r\n            document.body.classList.add(\"search-modal-open\");\r\n            if (searchInput) {\r\n                setTimeout(() => {\r\n                    searchInput.focus();\r\n                }, 100);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (searchClose && searchModal) {\r\n        searchClose.addEventListener(\"click\", function () {\r\n            searchModal.classList.remove(\"active\");\r\n            document.body.classList.remove(\"search-modal-open\");\r\n        });\r\n\r\n        // Modal dışına tıklama\r\n        searchModal.addEventListener(\"click\", function (e) {\r\n            if (e.target === this) {\r\n                searchModal.classList.remove(\"active\");\r\n                document.body.classList.remove(\"search-modal-open\");\r\n            }\r\n        });\r\n\r\n        // ESC tuşu ile kapatma\r\n        document.addEventListener(\"keydown\", function (e) {\r\n            if (e.key === \"Escape\" && searchModal.classList.contains(\"active\")) {\r\n                searchModal.classList.remove(\"active\");\r\n                document.body.classList.remove(\"search-modal-open\");\r\n            }\r\n        });\r\n    }\r\n\r\n    // Kod bloklarına kopyalama butonu ekle\r\n    document.querySelectorAll(\"pre\").forEach((pre) => {\r\n        // Sadece içinde code etiketi olan pre'leri işle\r\n        const codeElement = pre.querySelector(\"code\");\r\n        if (!codeElement) return;\r\n\r\n        // Eğer zaten bir kopyalama butonu varsa, yeni buton ekleme\r\n        if (pre.querySelector(\".copy-button\")) {\r\n            return;\r\n        }\r\n\r\n        const copyButton = document.createElement(\"button\");\r\n        copyButton.className = \"copy-button\";\r\n        copyButton.setAttribute(\"type\", \"button\");\r\n        copyButton.setAttribute(\"aria-label\", \"Kodu kopyala\");\r\n        copyButton.setAttribute(\"role\", \"button\");\r\n\r\n        // Butonu pre elementinin içine ekle\r\n        pre.appendChild(copyButton);\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const code = pre.querySelector(\"code\").textContent;\r\n            navigator.clipboard\r\n                .writeText(code)\r\n                .then(() => {\r\n                    copyButton.classList.add(\"copied\");\r\n                    copyButton.setAttribute(\"aria-label\", \"Kod kopyalandı\");\r\n\r\n                    setTimeout(() => {\r\n                        copyButton.classList.remove(\"copied\");\r\n                        copyButton.setAttribute(\"aria-label\", \"Kodu kopyala\");\r\n                    }, 2000);\r\n                })\r\n                .catch(() => {\r\n                    // Fallback if clipboard fails\r\n                    const textArea = document.createElement(\"textarea\");\r\n                    textArea.value = code;\r\n                    textArea.style.position = \"fixed\";\r\n                    document.body.appendChild(textArea);\r\n                    textArea.focus();\r\n                    textArea.select();\r\n\r\n                    try {\r\n                        document.execCommand(\"copy\");\r\n                        copyButton.classList.add(\"copied\");\r\n                        copyButton.setAttribute(\"aria-label\", \"Kod kopyalandı\");\r\n\r\n                        setTimeout(() => {\r\n                            copyButton.classList.remove(\"copied\");\r\n                            copyButton.setAttribute(\"aria-label\", \"Kodu kopyala\");\r\n                        }, 2000);\r\n                    } catch (err) {\r\n                        copyButton.classList.add(\"error\");\r\n                        copyButton.setAttribute(\"aria-label\", \"Kopyalanamadı\");\r\n\r\n                        setTimeout(() => {\r\n                            copyButton.classList.remove(\"error\");\r\n                            copyButton.setAttribute(\"aria-label\", \"Kodu kopyala\");\r\n                        }, 2000);\r\n                    }\r\n\r\n                    document.body.removeChild(textArea);\r\n                });\r\n        });\r\n\r\n        // Butonun görünürlüğünü kontrol et\r\n        const observer = new IntersectionObserver((entries) => {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    copyButton.style.opacity = \"1\";\r\n                }\r\n            });\r\n        });\r\n\r\n        observer.observe(pre);\r\n\r\n        // Kod dilini tespit et\r\n        let language = \"\";\r\n        if (codeElement.className) {\r\n            const classMatch = codeElement.className.match(/language-(\\w+)/);\r\n            if (classMatch && classMatch[1]) {\r\n                language = classMatch[1];\r\n\r\n                // Dil etiketi ekle (eğer zaten yoksa)\r\n                if (!pre.querySelector(\".filename\")) {\r\n                    const langLabel = document.createElement(\"span\");\r\n                    langLabel.className = \"filename\";\r\n                    langLabel.textContent = language.toUpperCase();\r\n\r\n                    // Dil etiketini pre'nin en başına ekle (ilk çocuk olarak)\r\n                    pre.insertBefore(langLabel, pre.firstChild);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Karakter sayısını hesapla\r\n        const charCount = codeElement.textContent.length;\r\n        const lineHeight = parseInt(window.getComputedStyle(codeElement).lineHeight) || 20;\r\n\r\n        // 500 karakterden fazla olan kod blokları için daha fazla göster/daha az göster butonu ekle\r\n        if (charCount > 500) {\r\n            // Başlangıçta max-height ayarla ve taşan içeriği gizle\r\n            pre.style.maxHeight = lineHeight * 10 + \"px\";\r\n            pre.style.overflow = \"hidden\";\r\n\r\n            // Buton container oluştur (daha iyi konumlandırma için)\r\n            const buttonContainer = document.createElement(\"div\");\r\n            buttonContainer.className = \"show-more-button-container\";\r\n\r\n            const showMoreButton = document.createElement(\"button\");\r\n            showMoreButton.className = \"show-more-button\";\r\n            showMoreButton.textContent = \"Daha Fazla Göster\";\r\n            showMoreButton.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n            // Buton container'a ekle ve sonra pre'nin yanına yerleştir\r\n            buttonContainer.appendChild(showMoreButton);\r\n            pre.parentNode.insertBefore(buttonContainer, pre.nextSibling);\r\n\r\n            showMoreButton.addEventListener(\"click\", function () {\r\n                const isExpanded = this.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n                if (isExpanded) {\r\n                    pre.style.maxHeight = lineHeight * 10 + \"px\";\r\n                    pre.classList.remove(\"expanded\");\r\n                    this.textContent = \"Daha Fazla Göster\";\r\n                    this.setAttribute(\"aria-expanded\", \"false\");\r\n                } else {\r\n                    pre.style.maxHeight = pre.scrollHeight + \"px\";\r\n                    pre.classList.add(\"expanded\");\r\n                    this.textContent = \"Daha Az Göster\";\r\n                    this.setAttribute(\"aria-expanded\", \"true\");\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    // TOC ve Arama özelliklerini global scope'a fonksiyon olarak tanımlayalım\r\n    window.initializeTOC = function () {\r\n        const toc = document.querySelector(\".toc\");\r\n        if (!toc) return;\r\n\r\n        // Başlık bağlantılarını seç\r\n        const tocLinks = toc.querySelectorAll(\"a\");\r\n\r\n        // Görünür başlıkları takip et\r\n        const headers = Array.from(document.querySelectorAll(\"h2, h3, h4, h5, h6\")).filter((header) => header.id);\r\n\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                entries.forEach((entry) => {\r\n                    if (entry.isIntersecting) {\r\n                        // Aktif olmayan tüm linkleri temizle\r\n                        tocLinks.forEach((link) => link.classList.remove(\"active\"));\r\n\r\n                        // Görünür başlığa karşılık gelen linki bul ve aktif et\r\n                        const activeLink = Array.from(tocLinks).find(\r\n                            (link) => link.getAttribute(\"href\") === `#${entry.target.id}`\r\n                        );\r\n\r\n                        if (activeLink) {\r\n                            activeLink.classList.add(\"active\");\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            {\r\n                rootMargin: \"-100px 0px -66%\",\r\n                threshold: 0,\r\n            }\r\n        );\r\n\r\n        headers.forEach((header) => observer.observe(header));\r\n\r\n        // Düzgün kaydırma\r\n        tocLinks.forEach((link) => {\r\n            link.addEventListener(\"click\", (e) => {\r\n                e.preventDefault();\r\n                const targetId = link.getAttribute(\"href\").substring(1);\r\n                const targetElement = document.getElementById(targetId);\r\n\r\n                if (targetElement) {\r\n                    window.scrollTo({\r\n                        top: targetElement.offsetTop - 80,\r\n                        behavior: \"smooth\",\r\n                    });\r\n\r\n                    history.pushState(null, null, `#${targetId}`);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    window.initializeSearch = function () {\r\n        const searchForm = document.querySelector(\".search-form\");\r\n        const searchInputField = document.querySelector(\".search-input\");\r\n        const searchResults = document.querySelector(\".search-results\");\r\n        const searchResultsList = document.querySelector(\".search-results-list\");\r\n\r\n        if (!searchForm || !searchInputField) return;\r\n\r\n        // URL'den arama parametresini al\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const initialQuery = urlParams.get(\"q\");\r\n\r\n        // Arama işlemi fonksiyonu\r\n        const performSearch = (query) => {\r\n            if (!query || query.trim() === \"\") return;\r\n\r\n            fetch(\"/search-data.json\")\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    const results = data.filter(\r\n                        (item) =>\r\n                            item.title.toLowerCase().includes(query.toLowerCase()) ||\r\n                            (item.content && item.content.toLowerCase().includes(query.toLowerCase()))\r\n                    );\r\n\r\n                    if (searchResultsList) {\r\n                        searchResultsList.innerHTML = \"\";\r\n\r\n                        if (results.length === 0) {\r\n                            const noResults = document.createElement(\"li\");\r\n                            noResults.className = \"search-no-results\";\r\n                            noResults.textContent = \"Sonuç bulunamadı\";\r\n                            searchResultsList.appendChild(noResults);\r\n                        } else {\r\n                            results.forEach((result) => {\r\n                                const item = document.createElement(\"li\");\r\n                                item.className = \"search-result-item\";\r\n\r\n                                const link = document.createElement(\"a\");\r\n                                link.href = result.url;\r\n                                link.className = \"search-result-link\";\r\n\r\n                                const title = document.createElement(\"h3\");\r\n                                title.className = \"search-result-title\";\r\n                                title.textContent = result.title;\r\n\r\n                                const snippet = document.createElement(\"p\");\r\n                                snippet.className = \"search-result-snippet\";\r\n                                snippet.textContent = result.snippet || \"İçerik önizlemesi mevcut değil\";\r\n\r\n                                link.appendChild(title);\r\n                                link.appendChild(snippet);\r\n                                item.appendChild(link);\r\n                                searchResultsList.appendChild(item);\r\n                            });\r\n                        }\r\n\r\n                        if (searchResults) {\r\n                            searchResults.classList.add(\"active\");\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Arama sırasında hata oluştu:\", error);\r\n                });\r\n        };\r\n\r\n        // URL'deki aramayı yap\r\n        if (initialQuery) {\r\n            searchInputField.value = initialQuery;\r\n            performSearch(initialQuery);\r\n        }\r\n\r\n        // Arama formu gönderildiğinde\r\n        searchForm.addEventListener(\"submit\", (e) => {\r\n            e.preventDefault();\r\n            const query = searchInputField.value.trim();\r\n\r\n            if (query) {\r\n                // URL'i güncelle\r\n                const newUrl = new URL(window.location.href);\r\n                newUrl.searchParams.set(\"q\", query);\r\n                window.history.pushState({}, \"\", newUrl);\r\n\r\n                performSearch(query);\r\n            }\r\n        });\r\n    };\r\n\r\n    // İçindekiler tablosu kontrolü\r\n    if (document.querySelector(\".toc\")) {\r\n        // İçindekiler tablosu fonksiyonlarını çalıştır\r\n        window.initializeTOC();\r\n    }\r\n\r\n    // Arama fonksiyonunu çalıştır\r\n    window.initializeSearch();\r\n});\r\n"]}