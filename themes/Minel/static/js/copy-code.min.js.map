{"version":3,"sources":["copy-code.js"],"names":["document","addEventListener","processedBlocks","Set","codeBlocks","querySelectorAll","length","forEach","block","has","add","wrapper","createElement","className","parentNode","classList","contains","insertBefore","appendChild","preElement","querySelector","copyButton","innerHTML","title","codeElement","linesCount","textContent","split","style","maxHeight","concat","MAX_VISIBLE_LINES","overflow","toggleButton","setAttribute","getAttribute","remove","code","text","navigator","clipboard","writeText","then","setTimeout","error","nestedWrapper","parentWrapper","firstChild","removeChild","copyButtons","i"],"mappings":"AAAA,aAAAA,SAASC,iBAAiB,oBAAoB,WAE1C,IAAMC,EAAkB,IAAIC,IAGtBC,EAAaJ,SAASK,iBAAiB,cAEnB,IAAtBD,EAAWE,SAEfF,EAAWG,SAAQ,SAAUC,GAEzB,IAAIN,EAAgBO,IAAID,GAAxB,CACAN,EAAgBQ,IAAIF,GAGpB,IAAMG,EAAUX,SAASY,cAAc,OAIvC,GAHAD,EAAQE,UAAY,sBAGfL,EAAMM,WAAWC,UAAUC,SAAS,sBAAzC,CACIR,EAAMM,WAAWG,aAAaN,EAASH,GACvCG,EAAQO,YAAYV,GAOxB,IAAMW,EAAaX,EAAMY,cAAc,OACvC,GAAKD,EAAL,CAGA,IAAME,EAAarB,SAASY,cAAc,UAC1CS,EAAWR,UAAY,cACvBQ,EAAWC,UACP,qUACJD,EAAWE,MAAQ,eACnBZ,EAAQO,YAAYG,GAGpB,IAAMG,EAAcL,EAAWC,cAAc,QAC7C,GAAII,EAAa,CACb,IACMC,GADWD,EAAYE,aAAe,IAChBC,MAAM,MAAMrB,OAIxC,GAAImB,EAF0B,KAI1BN,EAAWS,MAAMC,UAAS,GAAAC,OAAMC,GAAuB,MACvDZ,EAAWS,MAAMI,SAAW,SAG5BrB,EAAQI,UAAUL,IAAI,cAGjBC,EAAQS,cAAc,wBAAwB,CAC/C,IAAMa,EAAejC,SAASY,cAAc,UAC5CqB,EAAapB,UAAY,qBACzBoB,EAAaP,YAAW,oBAAAI,OAAuBL,EAAU,WACzDQ,EAAaC,aAAa,gBAAiB,SAC3CvB,EAAQO,YAAYe,GAGpBA,EAAahC,iBAAiB,SAAS,WAC+B,SAA/CgC,EAAaE,aAAa,kBAIzChB,EAAWS,MAAMC,UAAS,GAAAC,OAAMC,GAAuB,MACvDE,EAAaP,YAAW,oBAAAI,OAAuBL,EAAU,WACzDQ,EAAaC,aAAa,gBAAiB,SAC3CvB,EAAQI,UAAUL,IAAI,eAGtBS,EAAWS,MAAMC,UAAY,OAC7BI,EAAaP,YAAc,SAC3BO,EAAaC,aAAa,gBAAiB,QAC3CvB,EAAQI,UAAUqB,OAAO,aAEjC,GACJ,CAER,CAGAf,EAAWpB,iBAAiB,SAAS,WAEjC,IAAMoC,EAAO7B,EAAMY,cAAc,QAC7BkB,EAAO,GAEPD,IACAC,EAAOD,EAAKX,aAIhBa,UAAUC,UACLC,UAAUH,GACVI,MAAK,WAEFrB,EAAWC,UACP,2OACJD,EAAWN,UAAUL,IAAI,UAGzBiC,YAAW,WACPtB,EAAWC,UACP,qUACJD,EAAWN,UAAUqB,OAAO,SAChC,GAAG,IACP,IAAE,OACK,SAAUQ,GAEjB,GACR,GArFiB,CAJjB,CAdgC,CAwGpC,IAGA5C,SAASK,iBAAiB,6CAA6CE,SAAQ,SAAUsC,GAGrF,IADA,IAAMC,EAAgBD,EAAc/B,WAC7B+B,EAAcE,YACjBD,EAAc5B,YAAY2B,EAAcE,YAE5CD,EAAcE,YAAYH,EAC9B,IAGA7C,SAASK,iBAAiB,uBAAuBE,SAAQ,SAAUI,GAC/D,IAAMsC,EAActC,EAAQN,iBAAiB,gBAC7C,GAAI4C,EAAY3C,OAAS,EAErB,IAAK,IAAI4C,EAAI,EAAGA,EAAID,EAAY3C,OAAQ4C,IACpCD,EAAYC,GAAGd,QAG3B,IACJ","file":"copy-code.min.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    // Halihazırda işlenmiş kod bloklarını izlemek için\n    const processedBlocks = new Set();\n\n    // Tüm kod bloklarını bul\n    const codeBlocks = document.querySelectorAll(\".highlight\");\n\n    if (codeBlocks.length === 0) return;\n\n    codeBlocks.forEach(function (block) {\n        // Eğer blok daha önce işlendiyse atla\n        if (processedBlocks.has(block)) return;\n        processedBlocks.add(block);\n\n        // Kod bloğunu wrapper ile sarmala\n        const wrapper = document.createElement(\"div\");\n        wrapper.className = \"code-block-wrapper\";\n\n        // Eğer halihazırda bir wrapper içinde değilse sarmalama işlemi yap\n        if (!block.parentNode.classList.contains(\"code-block-wrapper\")) {\n            block.parentNode.insertBefore(wrapper, block);\n            wrapper.appendChild(block);\n        } else {\n            // Halihazırda bir wrapper içindeyse, işlemi atla\n            return;\n        }\n\n        // Pre elementini bul\n        const preElement = block.querySelector(\"pre\");\n        if (!preElement) return;\n\n        // Kopyalama butonu oluştur\n        const copyButton = document.createElement(\"button\");\n        copyButton.className = \"copy-button\";\n        copyButton.innerHTML =\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path></svg>';\n        copyButton.title = \"Kodu kopyala\";\n        wrapper.appendChild(copyButton);\n\n        // Kodun uzunluğunu kontrol et, belirli bir satırdan fazlaysa daralt ve genişlet düğmesi ekle\n        const codeElement = preElement.querySelector(\"code\");\n        if (codeElement) {\n            const codeText = codeElement.textContent || \"\";\n            const linesCount = codeText.split(\"\\n\").length;\n            const MAX_VISIBLE_LINES = 10; // Görünür satır sayısı\n            const MIN_LINES_TO_COLLAPSE = 50; // En az kaç satır olunca daraltılacak\n\n            if (linesCount > MIN_LINES_TO_COLLAPSE) {\n                // Code bloğuna yükseklik sınırı ekle (başlangıçta daraltılmış)\n                preElement.style.maxHeight = `${MAX_VISIBLE_LINES * 1.5}em`;\n                preElement.style.overflow = \"hidden\";\n\n                // Wrapper'a collapsed sınıfını ekle (gölge efekti için)\n                wrapper.classList.add(\"collapsed\");\n\n                // Genişlet/daralt düğmesi ekle (eğer daha önce eklenmemişse)\n                if (!wrapper.querySelector(\".code-toggle-button\")) {\n                    const toggleButton = document.createElement(\"button\");\n                    toggleButton.className = \"code-toggle-button\";\n                    toggleButton.textContent = `Tamamını göster (${linesCount} satır)`;\n                    toggleButton.setAttribute(\"aria-expanded\", \"false\");\n                    wrapper.appendChild(toggleButton);\n\n                    // Genişlet/daralt düğmesi işlevi\n                    toggleButton.addEventListener(\"click\", function () {\n                        const isExpanded = toggleButton.getAttribute(\"aria-expanded\") === \"true\";\n\n                        if (isExpanded) {\n                            // Daralt\n                            preElement.style.maxHeight = `${MAX_VISIBLE_LINES * 1.5}em`;\n                            toggleButton.textContent = `Tamamını göster (${linesCount} satır)`;\n                            toggleButton.setAttribute(\"aria-expanded\", \"false\");\n                            wrapper.classList.add(\"collapsed\");\n                        } else {\n                            // Genişlet\n                            preElement.style.maxHeight = \"none\";\n                            toggleButton.textContent = \"Daralt\";\n                            toggleButton.setAttribute(\"aria-expanded\", \"true\");\n                            wrapper.classList.remove(\"collapsed\");\n                        }\n                    });\n                }\n            }\n        }\n\n        // Kopyalama işlevi\n        copyButton.addEventListener(\"click\", function () {\n            // Kod metnini al\n            const code = block.querySelector(\"code\");\n            let text = \"\";\n\n            if (code) {\n                text = code.textContent;\n            }\n\n            // Metni panoya kopyala\n            navigator.clipboard\n                .writeText(text)\n                .then(function () {\n                    // Kopyalama başarılı olduğunda butonu güncelle\n                    copyButton.innerHTML =\n                        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"20 6 9 17 4 12\"></polyline></svg>';\n                    copyButton.classList.add(\"copied\");\n\n                    // 2 saniye sonra butonu eski haline getir\n                    setTimeout(function () {\n                        copyButton.innerHTML =\n                            '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path></svg>';\n                        copyButton.classList.remove(\"copied\");\n                    }, 2000);\n                })\n                .catch(function (error) {\n                    console.error(\"Kopyalama hatası:\", error);\n                });\n        });\n    });\n\n    // Varsa çift butonları temizle\n    document.querySelectorAll(\".code-block-wrapper > .code-block-wrapper\").forEach(function (nestedWrapper) {\n        // İç wrapper'ın içindeki tüm öğeleri dış wrapper'a taşı ve iç wrapper'ı kaldır\n        const parentWrapper = nestedWrapper.parentNode;\n        while (nestedWrapper.firstChild) {\n            parentWrapper.appendChild(nestedWrapper.firstChild);\n        }\n        parentWrapper.removeChild(nestedWrapper);\n    });\n\n    // Çift kopyalama butonlarını temizle\n    document.querySelectorAll(\".code-block-wrapper\").forEach(function (wrapper) {\n        const copyButtons = wrapper.querySelectorAll(\".copy-button\");\n        if (copyButtons.length > 1) {\n            // İlk buton dışındakileri kaldır\n            for (let i = 1; i < copyButtons.length; i++) {\n                copyButtons[i].remove();\n            }\n        }\n    });\n});\n"]}