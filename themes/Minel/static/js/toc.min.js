"use strict";function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,l=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){l=!0,a=e},f:function(){try{i||null==n.return||n.return()}finally{if(l)throw a}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}!function(){var e=function(e,t){"function"==typeof window.debugLog&&window.debugLog(e,t)};e("TOC","TOC başlatılıyor...");var t=document.querySelector(".toc-container");if(t){var n=t.querySelectorAll("a.toc-href");if(e("TOC","TOC linkleri: ".concat(n.length)),n.length){n.forEach((function(t,n){e("TOC","Link ".concat(n,": ").concat(t.href," - ").concat(t.textContent)),t.insertAdjacentHTML("afterbegin",'\n    <svg viewBox="0 0 24 24" class="toc-icon">\n        <circle cx="4" cy="12" r="2" class="toc-dot"/>\n        <line x1="6" y1="12" x2="18" y2="12" class="toc-line"/>\n    </svg>\n  ')}));var r=Array.from(n).map((function(t){var n=t.getAttribute("href").slice(1),r=document.getElementById(n);return e("TOC","Başlık ".concat(n,": ").concat(r?"bulundu":"bulunamadı")),{id:n,header:r,link:t}})).filter((function(e){return e.header}));e("TOC","Eşleşen başlık sayısı: ".concat(r.length));var o,a=function(){var n,o=window.scrollY+200,a=null,i=null,l=_createForOfIteratorHelper(r);try{for(l.s();!(n=l.n()).done;){var c=n.value;if(!(c.header.offsetTop<=o))break;i=a,a=c}}catch(e){l.e(e)}finally{l.f()}a?(e("TOC","Aktif başlık: ".concat(a.id)),r.forEach((function(e,n){var l=e.header,c=e.link;if(l.offsetTop<o){var u;c.classList.add("toc-already-read");var f=null===(u=r[n+1])||void 0===u?void 0:u.header,s=f?Math.min(100,(o-l.offsetTop)/(f.offsetTop-l.offsetTop)*100):100,d=c.querySelector("circle");d&&d.setAttribute("stroke-dashoffset",Math.round(100-s))}else c.classList.remove("toc-already-read");if(l===a.header){c.classList.add("toc-reading");var y=c.parentElement,h=t.getBoundingClientRect(),v=y.getBoundingClientRect(),p=i&&i.header.offsetTop>a.header.offsetTop;if(v.top<h.top||v.bottom>h.bottom){var T=p?.7*t.clientHeight:.3*t.clientHeight;t.scrollTo({top:y.offsetTop-T,behavior:"smooth"})}}else c.classList.remove("toc-reading")}))):e("TOC","Aktif başlık bulunamadı")};window.addEventListener("scroll",(function(){o&&window.cancelAnimationFrame(o),o=requestAnimationFrame((function(){e("TOC","Scroll pozisyonu: ".concat(window.scrollY)),a()}))}),{passive:!0}),n.forEach((function(t){t.addEventListener("click",(function(n){n.preventDefault();var r=t.getAttribute("href").slice(1),o=document.getElementById(r);o&&(e("TOC","Tıklanan başlık: ".concat(r)),n.stopPropagation(),window.scrollTo({top:o.offsetTop-100,behavior:"smooth"}),history.pushState?history.pushState(null,null,"#".concat(r)):location.hash="#".concat(r))}))})),e("TOC","TOC ilk güncelleme yapılıyor..."),a()}else e("TOC","TOC linkleri bulunamadı")}else e("TOC","TOC container bulunamadı")}();
//# sourceMappingURL=toc.min.js.map
