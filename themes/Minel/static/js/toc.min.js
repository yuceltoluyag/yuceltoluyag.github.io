"use strict";function _createForOfIteratorHelper(e,t){var o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!o){if(Array.isArray(e)||(o=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){o&&(e=o);var n=0,r=function(){};return{s:r,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,l=!1;return{s:function(){o=o.call(e)},n:function(){var e=o.next();return i=e.done,e},e:function(e){l=!0,a=e},f:function(){try{i||null==o.return||o.return()}finally{if(l)throw a}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var o={}.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=Array(t);o<t;o++)n[o]=e[o];return n}!function(){window.debugLog("TOC","TOC başlatılıyor...");var e=document.querySelector(".toc-container");if(e){var t=e.querySelectorAll("a.toc-href");if(window.debugLog("TOC","TOC linkleri: ".concat(t.length)),t.length){t.forEach((function(e,t){window.debugLog("TOC","Link ".concat(t,": ").concat(e.href," - ").concat(e.textContent)),e.insertAdjacentHTML("afterbegin",'\n    <svg viewBox="0 0 24 24" class="toc-icon">\n        <circle cx="4" cy="12" r="2" class="toc-dot"/>\n        <line x1="6" y1="12" x2="18" y2="12" class="toc-line"/>\n    </svg>\n  ')}));var o=Array.from(t).map((function(e){var t=e.getAttribute("href").slice(1),o=document.getElementById(t);return window.debugLog("TOC","Başlık ".concat(t,": ").concat(o?"bulundu":"bulunamadı")),{id:t,header:o,link:e}})).filter((function(e){return e.header}));window.debugLog("TOC","Eşleşen başlık sayısı: ".concat(o.length));var n,r=function(){var t,n=window.scrollY+200,r=null,a=null,i=_createForOfIteratorHelper(o);try{for(i.s();!(t=i.n()).done;){var l=t.value;if(!(l.header.offsetTop<=n))break;a=r,r=l}}catch(e){i.e(e)}finally{i.f()}r?(window.debugLog("TOC","Aktif başlık: ".concat(r.id)),o.forEach((function(t,i){var l=t.header,c=t.link;if(l.offsetTop<n){var u;c.classList.add("toc-already-read");var d=null===(u=o[i+1])||void 0===u?void 0:u.header,f=d?Math.min(100,(n-l.offsetTop)/(d.offsetTop-l.offsetTop)*100):100,s=c.querySelector("circle");s&&s.setAttribute("stroke-dashoffset",Math.round(100-f))}else c.classList.remove("toc-already-read");if(l===r.header){c.classList.add("toc-reading");var g=c.parentElement,h=e.getBoundingClientRect(),y=g.getBoundingClientRect(),b=a&&a.header.offsetTop>r.header.offsetTop;if(y.top<h.top||y.bottom>h.bottom){var w=b?.7*e.clientHeight:.3*e.clientHeight;e.scrollTo({top:g.offsetTop-w,behavior:"smooth"})}}else c.classList.remove("toc-reading")}))):window.debugLog("TOC","Aktif başlık bulunamadı")};window.addEventListener("scroll",(function(){n&&window.cancelAnimationFrame(n),n=requestAnimationFrame((function(){window.debugLog("TOC","Scroll pozisyonu: ".concat(window.scrollY)),r()}))}),{passive:!0}),t.forEach((function(e){e.addEventListener("click",(function(t){t.preventDefault();var o=e.getAttribute("href").slice(1),n=document.getElementById(o);n&&(window.debugLog("TOC","Tıklanan başlık: ".concat(o)),t.stopPropagation(),window.scrollTo({top:n.offsetTop-100,behavior:"smooth"}),history.pushState?history.pushState(null,null,"#".concat(o)):location.hash="#".concat(o))}))})),window.debugLog("TOC","TOC ilk güncelleme yapılıyor..."),r()}else window.debugLog("TOC","TOC linkleri bulunamadı")}else window.debugLog("TOC","TOC container bulunamadı")}();
//# sourceMappingURL=toc.min.js.map
